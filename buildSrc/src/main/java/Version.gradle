def Group(Closure closure) {
    closure.delegate = dependencies
    return closure
}

ext {

    androidx = Group {
        implementation Dependencies.appCompat
        implementation Dependencies.androidxFragment
        implementation Dependencies.androidxAnnotation
        implementation Dependencies.androidxRecyclerView
        implementation Dependencies.androidxCore
        implementation Dependencies.androidxConstraintLayout
        implementation Dependencies.androidxPref
        implementation Dependencies.androidxWork
        implementation Dependencies.swipeRefreshLayout
        implementation Dependencies.biometricLib
        implementation Dependencies.viewPager2Lib
        // Lifecycle
        implementation Dependencies.lifecyclerLiveDataCore
        implementation Dependencies.lifeCycleExtension
        // Room
        implementation Dependencies.roomLibs
        implementation Dependencies.roomExtension
        implementation Dependencies.roomPaging
        kapt Dependencies.roomCompiler
        //Paging
        implementation Dependencies.pagingLib
        // Not really AndroidX
        implementation Dependencies.materialDesign
    }

    network = Group {
        implementation Dependencies.retrofitLibs
        implementation Dependencies.retrofitMoshi
        implementation Dependencies.retrofitScalar
    }

    kotlin = Group {
        implementation Dependencies.kotlinLib
        implementation Dependencies.coroutineCore
    }

    moshi = Group {
        implementation Dependencies.moshiLib
        kapt Dependencies.moshiCodegen
    }

    glide = Group {
        implementation Dependencies.glideLib
        implementation Dependencies.glideOkHttpExtension
        kapt Dependencies.glideCompiler
    }

    markdown = Group {
        implementation Dependencies.markdownLib
        implementation Dependencies.markdownStrikeThroughExtension
        implementation Dependencies.markdownAutoLink
    }

    testing = Group {
        // junit
        testImplementation Dependencies.jUnitApi
        testRuntimeOnly Dependencies.junitEngine
        testImplementation Dependencies.jUnitParameter

        testImplementation Dependencies.mockWebServer
        androidTestImplementation Dependencies.androidTest
        androidTestUtil Dependencies.testOrchestrator
    }

    jetpackCompose = Group {
        def composeBom = platform(Dependencies.composeBom)
        implementation composeBom
        androidTestImplementation composeBom

        // Material 3
        implementation 'androidx.compose.material3:material3'

        // Android Studio Preview
        implementation 'androidx.compose.ui:ui-tooling-preview'
        debugImplementation 'androidx.compose.ui:ui-tooling'

        // UI Tests
        androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
        debugImplementation 'androidx.compose.ui:ui-test-manifest'

        // Icons extended
        implementation 'androidx.compose.material:material-icons-extended'

        // Window size utils
        implementation 'androidx.compose.material3:material3-window-size-class'

        // Integrations
        implementation Dependencies.composeActivity
        implementation Dependencies.composeViewModel
        implementation 'androidx.compose.runtime:runtime-livedata'

        // Accompanist dependencies
        implementation Dependencies.accompanistPager
    }
}