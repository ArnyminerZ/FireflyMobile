apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.akaita.android.easylauncher'
apply plugin: "com.github.ben-manes.versions"
apply plugin: 'org.owasp.dependencycheck'

android {
    compileSdkVersion(Dependencies.compileSdk)
    defaultConfig {
        applicationId "xyz.hisname.fireflyiii"
        minSdkVersion(Dependencies.minSdk)
        targetSdkVersion(Dependencies.targetSdk)
        versionCode 61
        versionName "2.0.7"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'

        vectorDrawables.useSupportLibrary = true
        def appConfigFile = file('config.properties')
        def hostName = ""
        if(appConfigFile.exists()){
            Properties appConfig = new Properties()
            appConfig.load(new FileInputStream(appConfigFile))
            if(appConfig['config.hostname'] != null){
                hostName = appConfig['config.hostname']
                manifestPlaceholders = [host: hostName.replaceAll('"', '')]
            }
        } else {
            throw new FileNotFoundException("$appConfigFile not found!")
        }
        buildConfigField("String", "HOSTNAME", hostName)
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

   
    signingConfigs {
        githubRelease {
            v1SigningEnabled true
            v2SigningEnabled true
			storeFile file(System.getenv("FireflyKeystoreFile"))
            storePassword System.getenv("FireflyKeystorePassword")
            keyAlias System.getenv("FireflyKeystoreAlias")
            keyPassword System.getenv("FireflyKeystorePassword")
        }

        release {
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            matchingFallbacks = ['release']
            shrinkResources true
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix "-debug"
            minifyEnabled false
            matchingFallbacks = ['debug']
        }
        // This build type is no different from `release` except that it run unit tests and change the apk name
        // It's created so that it is compatible with Fdroid build system
        githubRelease{
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            matchingFallbacks = ['release']
            signingConfig signingConfigs.githubRelease
            shrinkResources true
            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "v${versionName}-firefly.apk"
                }
            }
        }
        compileOptions {
            coreLibraryDesugaringEnabled true
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
    }

    aaptOptions {
        ignoreAssetsPattern "NOTICE.txt"
    }

    configurations {all*.exclude group: 'com.android.support'}
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation Dependencies.kotlinLib
    // Android support libs
    implementation Dependencies.appCompat
    implementation Dependencies.androidxFragment
    implementation Dependencies.androidxAnnotation
    implementation Dependencies.androidxRecyclerView
    implementation Dependencies.materialDesign
    implementation Dependencies.androidxCore
    implementation Dependencies.androidxConstraintLayout
    implementation Dependencies.androidxPref
    implementation Dependencies.androidxWork
    implementation Dependencies.swipeRefreshLayout
    implementation Dependencies.biometricLib

    // Lifecycle component
    implementation Dependencies.lifecycleLibs
    implementation Dependencies.lifecyclerLiveDataCore
    kapt Dependencies.lifecycleCompiler

    // Room
    implementation Dependencies.roomLibs
    kapt Dependencies.roomCompiler
    // Retrofit
    implementation Dependencies.retrofitLibs
    implementation Dependencies.retrofitGson
    implementation Dependencies.retrofitScalar

    // Coroutine
    implementation Dependencies.coroutineCore

    // Glide
    implementation Dependencies.glideLib
    implementation Dependencies.glideOkHttpExtension
    kapt Dependencies.glideCompiler

    implementation Dependencies.materialDrawer
    implementation Dependencies.materialDrawerIconics
    implementation Dependencies.iconics
    implementation Dependencies.googleMaterialIcons
    implementation Dependencies.fontAwesome

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.9'

    implementation Dependencies.toasty
    implementation Dependencies.chart
    implementation Dependencies.aboutLib
    implementation Dependencies.nachos
    implementation Dependencies.acraMail
    implementation Dependencies.osmdroid
    implementation Dependencies.accordionView
    implementation Dependencies.fancyshowcaseview

    implementation Dependencies.markdownLib
    implementation Dependencies.markdownStrikeThroughExtension
    implementation Dependencies.markdownAutoLink

    // Project Lib
    api project(path: ":languagepack")

    testImplementation Dependencies.jUnitApi
    testRuntimeOnly Dependencies.junitEngine
    testImplementation Dependencies.jUnitParameter

    testImplementation Dependencies.mockWebServer
    androidTestImplementation Dependencies.testRunner
    androidTestUtil Dependencies.testOrchestrator
    debugImplementation Dependencies.debugDb
}